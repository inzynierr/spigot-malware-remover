package net.inzynierr.malware_remover;

import org.objectweb.asm.MethodVisitor;
import org.objectweb.asm.Opcodes;

public class MalwareMethodVisitor extends MethodVisitor {

  private boolean canIgnore;

  public MalwareMethodVisitor(MethodVisitor visitor) {
    super(Opcodes.ASM9, visitor);
  }

  @Override
  public void visitMethodInsn(int opcode, String owner, String name, String descriptor,
      boolean isInterface) {
    if (this.canIgnore) {
      if (opcode == Opcodes.INVOKEVIRTUAL && MalwareRemoverApplication.BLACKLISTED_FILES
          .matcher(owner).find() && name.equals("a")) {
        this.canIgnore = false;
      }

      return;
    }

    super.visitMethodInsn(opcode, owner, name, descriptor, isInterface);
  }

  @Override
  public void visitTypeInsn(int opcode, String type) {
    if (opcode == Opcodes.NEW && MalwareRemoverApplication.BLACKLISTED_FILES.matcher(type).find()) {
      this.canIgnore = true;
      return;
    }

    super.visitTypeInsn(opcode, type);
  }

  @Override
  public void visitVarInsn(int opcode, int var) {
    if (!this.canIgnore) {
      super.visitVarInsn(opcode, var);
    }
  }

  @Override
  public void visitInsn(int opcode) {
    if (!this.canIgnore) {
      super.visitInsn(opcode);
    }
  }
}
